Module 8 - Lab 5 - Managing Storage



-first baseline snapshot is taken
-next snapshots are taken only on the changes
-storage is saved here
-best practise to take a snapshot is to stop/freeze an instance and then take it. os, caching might be running, taking snapshot while running will lead to misses in data
-versioning is done to retrieve deleted data



s3>
create bucket>
bucket name>
bucket010
Block all public access>
uncheck>
create>



ec2>
instances>
command host>
copy public ip addr>



details>
show>
download pem
$ cd Downloads
$ sudo rm -rf labsuser.pem
$ sudo chmod 600 labsuser.pem
$ sudo ssh -i labsuser.pem ec2-user@54.85.152.58
	$ aws help
	: q
$ aws --version
$ aws configure
AWS Access Key ID [None]: sss
AWS Secret Access Key [None]: sss
Default region name [None]: us-east-1
Default output format [None]: json



aws academy>
details>
aws cli>
show> 
copy the text>

$ sudo nano ~/.aws/credentials
$ aws s3 ls
$ aws ec2 describe-instances
$ aws ec2 describe-instances --filter 'Name=tag:Name,Values=Processor'
$ aws ec2 describe-instances --filter 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.{VolumeId:VolumeId}'

	 "VolumeId": "vol-098a2a7dbfbc1d63e"

$ aws ec2 describe-instances --filters 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].InstanceId'

	"i-05b8f6d1fc06acc87"

$ aws ec2 stop-instances --instance-ids 
$ aws ec2 describe-instances --filters 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].InstanceId'
$ aws ec2 stop-instances --instance
$ aws ec2 describe-instances --filter 'Name=tag:Name,Values=Processor' --query 'Reservations[0].Instances[0].BlockDeviceMappings[0].Ebs.{VolumeId:VolumeId}'
$ aws ec2 stop-instances --instance-ids i-05b8f6d1fc06acc87
$ aws ec2 wait instance-stopped --instance-id i-05b8f6d1fc06acc87
$ aws ec2 create-snapshot --volume-id vol-098a2a7dbfbc1d63e
$ aws ec2 wait snapshot-completed --snapshot-id snap-0c2ccf98bfcba1318
$ aws ec2 start-instances --instance-ids i-05b8f6d1fc06acc87
$ aws ec2 wait instance-running --instance-id i-05b8f6d1fc06acc87
$ echo "* * * * *  aws ec2 create-snapshot --volume-id vol-098a2a7dbfbc1d63e >> /tmp/cronlog 2>&1" > cronjob

	the number 2 and 1 is standard error and standard output
	it needs to be redirected to util called cronjob

$ ls
$ sudo nano cronjob 
$ crontab cronjob
$ aws ec2 wait snapshot-completed --snapshot-id snap-0c2ccf98bfcba1318
$ ls
$ sudo nano snapshotter_v2.py 
$ aws ec2 describe-snapshots --filters "Name=volume-id,Values=<volume-id>"
$ aws ec2 describe-snapshots --filters "Name=volume-id,Values=vol-098a2a7dbfbc1d63e"
$ aws ec2 describe-snapshots --filters "Name=volume-id,Values=vol-098a2a7dbfbc1d63e" --query 'Snapshot[*].SnapshotId'
$ aws ec2 describe-snapshots --filters "Name=volume-id,Values=vol-098a2a7dbfbc1d63e" --query 'Snapshots[*].SnapshotId'
$ crontab -r
$ more snapshotter_v2.py
$ python3.8 snapshotter_v2.py 
$ aws ec2 describe-snapshots --filters "Name=volume-id,Values=vol-098a2a7dbfbc1d63e" --query 'Snapshots[*].SnapshotId'
$ exit


ec2>
snapshots>
snapshots are created on the aws


     
   
processor>
$ sudo ssh -i labsuser.pem ec2-user@54.85.152.58
$ aws configure
$ aws configure
AWS Access Key ID [None]: sss
AWS Secret Access Key [None]: sss
Default region name [None]: us-east-1
Default output format [None]: json



aws academy>
details>
aws cli>
show> 
copy the text>
$ sudo nano ~/.aws/credentials
$ aws s3 ls
$ wget https://aws-tc-largeobjects.s3-us-west-2.amazonaws.com/CUR-TF-200-RESOPS/lab5vocareum/files.zip
$ ls

	files.zip

$ sudo unzip files.zip
$ ls

	files  files.zip

$ cd files/
$ cat file1.txt
$ aws s3api put-bucket-versioning     --bucket cdcbucket010     --versioning-configuration Status=Enabled
$ cd ..
$ aws s3 sync files s3://cdcbucket010

s3>
check the files>

	EC2>
	Instances>
	processor>
	actions>
	security>
	Modify IAM role>
	s3bucketaccess
		//this iam role is why the bucket is accessed
		
$ sudo rm -rf files/file1.txt 
$ aws s3 sync files s3://cdcbucket010 --delete
	//these 2 commands are to show that the files are deleted

   
s3>
check the files>
we can see that file1 is deleted
but versioning is enabled
so show versions needs to be checked
we can see old file1
if we need to delete the file permanently, we need to delete the delete marker


$ aws s3api list-object-versions --bucket cdcbucket010 --prefix file1.txt

copy the versionid of delete marker   
   
	"VersionId": "Dm.6xYIEP3PFAAlwX9pu8speHYNb556j"
	

   
   
   
   
   
   
   
   
   
   
